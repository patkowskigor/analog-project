<script lang="ts">
  import { AsyncPipe } from '@angular/common' with { analog: 'imports' };
  import { MarkdownComponent } from '@analogjs/content' with { analog: 'imports' };
  import { injectContent } from '@analogjs/content';
  import PostAttributes from '../../post-attributes';

interface Comment {
  author: string;
  content: string;
  createdAt: Date;
}

  const post$ = injectContent<PostAttributes>('slug');

  // Lokalna tablica do przechowywania komentarzy
  const comments: Comment[] = [];


  // Funkcja obsługująca wysłanie formularza komentarza
  function submitComment(event: Event) {
    event.preventDefault();

    // Pobierz wartości z pól formularza
    const authorInput = document.getElementById('author') as HTMLInputElement;
    const commentInput = document.getElementById('comment') as HTMLTextAreaElement;
    const author = authorInput.value.trim();
    const content = commentInput.value.trim();

    // Walidacja pustych pól
    if (!author || !content) return;

    // Dodaj nowy komentarz do tablicy
    comments.push({ 
      author, 
      content, 
      createdAt: new Date() 
    });

    // Wyczyść formularz
    authorInput.value = '';
    commentInput.value = '';
  }
</script>

<template>
  @if (post$ | async; as post) {
    <article class="max-w-3xl mx-auto p-4">
      <img
        class="max-h-[40vh] w-full object-cover mb-6 rounded shadow-lg"
        [src]="post.attributes.coverImage"
        alt="Okładka posta"
      />
      <div class="prose prose-indigo mx-auto mb-8">
        <analog-markdown [content]="post.content" />
      </div>
    </article>
  }

  <hr class="my-8 border-gray-300" />

  <section class="max-w-3xl mx-auto p-4">
    <h2 class="text-2xl font-semibold mb-4">Dodaj komentarz</h2>
    <form class="flex flex-col space-y-4" (ngSubmit)="submitComment($event)">
      <div>
        <label for="author" class="block text-sm font-medium text-gray-700 mb-1">
          Autor
        </label>
        <input
          id="author"
          type="text"
          class="w-full h-12 px-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-300"
          placeholder="Wpisz swoje imię"
        />
      </div>
      <div>
        <label for="comment" class="block text-sm font-medium text-gray-700 mb-1">
          Komentarz
        </label>
        <textarea
          id="comment"
          rows="4"
          class="w-full p-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-300"
          placeholder="Wpisz treść komentarza"
        ></textarea>
      </div>
      <button
        type="submit"
        class="mt-4 px-6 py-2 bg-green-500 text-white rounded-lg hover:bg-green-600 focus:ring-4 focus:ring-green-300 shadow-lg focus:outline-none active:scale-95 transition-transform duration-150"
      >
        Dodaj komentarz
      </button>
    </form>
  </section>

  <hr class="my-8 border-gray-300" />

  <section class="max-w-3xl mx-auto p-4">
    <h2 class="text-2xl font-semibold mb-4">Komentarze</h2>
    @if (comments.length > 0) {
      <ul class="space-y-4">
        @for (let comment of comments) {
          <li class="p-4 border rounded-md">
            <p class="font-semibold">
              {{ comment.author }} 
              <span class="text-sm text-gray-500">
                – {{ comment.createdAt | date:'short' }}
              </span>
            </p>
            <p>{{ comment.content }}</p>
          </li>
        }
      </ul>
    } @else {
      <p>Brak komentarzy. Bądź pierwszym, który doda komentarz!</p>
    }
  </section>
</template>

<style>
  /* Dodatkowe style, jeżeli potrzebne */
</style>
